#!/bin/bash

# OWCGenerate [ARGS...]

# Generate - generate the Open Water Challenge files for the years 2021-current year, or
# for the year(s) passed via arguments to this script.
# It's assumed that this script is in a directory named:
#		/a/b/c/d/PMSOWChallenge/Code/Scripts
# Based on that assumption, the directory 'Code' is the grandparent directory of this script,
# and is considered the 'appDirName' of the Open Water Challenge application.
# This means, for one thing, that the properties.txt
# file is in the directory 'Code', so look at that file if you don't know the significance
# of the appDirName.  
#
# In addition, assuming the above directory structure, the /a/b/c/d/PMSOWChallenge/GeneratedFiles
# directory must exist (it will be created by this script if necessary), 
# and it is in this directory the results generated by this script are written.
#
# This script will generate one important file that can then be uploaded to the
# Pac Masters web site for general public view:
#	XXXXPacMastersOWChallengeResults.html - the computed Accumulated Points
# where
#	XXX is the current "year", e.g. if the current year is 2016 then the file is named
#	2016PacMastersOWChallengeResults.html
#
# To successfully execute this script you must have write access to /tmp and the
# directories /a/b/c/d/PMSOWChallenge/ and /a/b/c/d/PMSOWChallenge/GeneratedFiles/
#
# ARGS:
#	[ARGS...] - optional args to be passed to OWChallenge.pl
#

# debugging...
#set -x
CURRENT_YEAR=`date +%Y`
TMPFILE=/tmp/OWCGenerate.$$
PROGNAME=`hostname`::$0

# compute the full path name of the appDirName (we assume that this script lives in a
# sub directory of the appDirName.) 
script_dir=$(dirname $0)
pushd $script_dir >/dev/null; FULLPATHSCRIPT=`pwd -P`; popd >/dev/null
APPDIRNAME=$(dirname "$FULLPATHSCRIPT")

# compute the full path name of the GeneratedFiles directory:
APPROOTDIR=$(dirname "$APPDIRNAME")
pushd $APPROOTDIR >/dev/null; FULLPATHROOT=`pwd -P`; popd >/dev/null
GENERATEDFILESDIR=$FULLPATHROOT/GeneratedFiles

# Guarantee that the GeneratedFiles directory exists
mkdir -p $GENERATEDFILESDIR

# remove the generated html files if they exist.  This way we'll know when new ones are generated.
if [ -e "$GENERATEDFILESDIR/????PacMastersOWChallengeResults.html" ] ; then
	rm -f $GENERATEDFILESDIR/????PacMastersOWChallengeResults.html
fi

echo ""
echo ""
# now generate the Open Water Challenge file...
echo "***>>> Generate the '...Open Water Challenge file...' (output file: $TMPFILE)"
perl $APPDIRNAME/OWChallenge.pl $* | tee $TMPFILE

# get the names of the generated files so we can rename them
GENERATED_HTML=$GENERATEDFILESDIR/${CURRENT_YEAR}PacMastersOWChallengeResults.html
GENERATED_LOG=$GENERATEDFILESDIR/${CURRENT_YEAR}PacMastersOWChallengeResultsLog.txt

# do the generated files exist?
if [ -z $GENERATED_HTML ] || [ -z $GENERATED_LOG ] ; then
	echo "$PROGNAME: Failed to create the '...Open Water Challenge file...' - ABORT!"
	exit 1;
fi
if [ ! -e $GENERATED_HTML ] || [ ! -e $GENERATED_LOG ] ; then
	echo "$PROGNAME: Failed to create $GENERATED_HTML and/or $GENERATED_LOG - ABORT!"
	exit 1
fi


echo "***>>> Generation of $GENERATED_HTML complete."

# done
echo $PROGNAME is done\!
#rm $TMPFILE
